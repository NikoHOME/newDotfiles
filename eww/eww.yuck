
(defwidget bar []
  (box :orientation "h"
    (workspaces)
    (right)
  )
)
    
(defwidget seperator []

  (label
    :class "seperator"
    :text ":"
  )
)


(defwidget right []
  (box 
    :class "right"
    :orientation "h"
    :space-evenly false
    :spacing 10
    :halign "end"
    
    (volume_module)
    (seperator)
    (wifi_module)
    (seperator)
    (battery_module)
    (disk_module)
    (ram_module)
    (seperator)
    (clock_module)
  )
)
    


(defwidget battery_module []
  (box 
    :class "bat-module" 
    :vexpand "false" 
    :hexpand "false" 
    (button 
        :limit-width 2
        :tooltip "battery on ${battery}%"
        :onclick "eww open system"
        :show_truncated false
        :wrap false
    
      (metric-v 
        :label "󰂄 " ; 
        :value battery
        :onchange ""
      )
    )
  )
)


(defwidget disk_module []
  (box 
    :class "disk-module" 
    :vexpand "false" 
    :hexpand "false"  
    (button 
      :limit-width 2
      :tooltip "using ${round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}% disk space"
      :onclick "eww open system"
      :show_truncated false
      :wrap false
      (metric-v 
        :label "󰆼 " ; 
        :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
        :onchange ""
      )
    )
  )
)


(defpoll memory :interval "5s" "scripts/memory")

(defwidget ram_module []
  (box 
    :class "ram-module" 
    :vexpand "false" 
    :hexpand "false" 
    (button 
      :limit-width 2
      :tooltip "using ${memory}% ram"
      :onclick "eww open system"
      :show_truncated false
      :wrap false
      (metric-v 
        :label "󰍛 "
        :value memory
        :onchange ""
      )
    )
  )
)

(defvar vol_reveal false)
(defpoll volume :interval "1s" "scripts/getvol")

(defwidget volume_module []
  (eventbox 
      :onhover "eww update vol_reveal=\"true\""
			:onhoverlost "eww update vol_reveal=\"false\""
      :tooltip "${volume}%"
      :class "volume-module"

    (box 
      :space-evenly "false" 
      :hexpand "false" 
      :vexpand true
      :orientation "h" 
      :spacing "3" 
      (button   
        :onclick "pavucontrol &"
        :wrap "false"  
        ""
      )
      (revealer 
          :transition "slideleft"
          :reveal vol_reveal
          :duration "400ms"
        (metric
          :class "volbar"
          :value volume
          :orientation "h"
          
          :label ""
          :onchange "amixer sset Master {}%"
        )
      )
    )
  )
)

(defvar wifi_reveal false)

(defpoll COL_WLAN :interval "2s" "scripts/wifi --COL")
(defpoll ESSID_WLAN :interval "2s" "scripts/wifi --ESSID")
(defpoll WLAN_ICON :interval "2s" "scripts/wifi --ICON")

(defwidget wifi_module [] 
  (eventbox 
    :onhover "eww update wifi_reveal=\"true\""
		:onhoverlost "eww update wifi_reveal=\"false\""
    :onclick "scripts/network-dmenu"
    :class "module-wifi" 
		(box 
      :vexpand "false" 
      :hexpand "false" 
      :space-evenly "false"
			(button 
        :onclick "eww update wifi_reveal=\"true\""
        :wrap "false" 
        :style "color: ${COL_WLAN};" 
        WLAN_ICON
      )
      (revealer 
        :transition "slideright"
        :reveal wifi_reveal
        :duration "400ms"
        (label    
          :class "module_essid"
			    :text ESSID_WLAN
			    :orientation "h"
			  )
      )
    )
  )
)

(defvar calendar_reaveal true)
(defpoll calendar_day :interval "20h" "date '+%d'")
(defpoll calendar_year :interval "20h" "date '+%Y'")

(defwidget calendar_module []
  (eventbox 
    :onhoverlost "eww close calendar"
    (box 
      :class "cal" 
      :orientation "v"
      (box 
        :class "cal-in"
        (calendar 
          :class "cal" 
          :day calendar_day 
          :year calendar_year
          :visible {calendar_reaveal}
        )
      )
    )
  )
)

(defwindow calendar
	:geometry (
      geometry :x "-20px" 
      :y "7%" 
      :anchor "top right"
      :width "270px" 
      :height "60px")
  (calendar_module)
)




(defvar time_reveal false)
(defpoll clock_time :interval "5m" "date +\%H")
(defpoll clock_minute :interval "5s" "date +\%M")
(defpoll clock_date :interval "10h" "date '+%d/%m'")

(defwidget clock_module []
  (eventbox 
    :onhover "eww update time_reveal=\"true\""
    :onhoverlost "eww update time_reveal=\"false\""
    :onclick "eww open calendar" 
    :class "time-module"
    (box 
      :class "module" 
      :space-evenly "false" 
      :orientation "h" 
      :spacing "3"
      
      (label :text clock_time :class "clock_time_class" )
      (label :text ":" :class "clock_time_sep" )
      (label :text clock_minute :class "clock_minute_class")
      (revealer 
        :transition "slideleft"
        :reveal time_reveal
        :duration "350ms"
        (button 
          :class "clock_date_class"
          :onclick "eww open calendar" 
          clock_date 
        )
      )
    )
  )
)

(deflisten occupied_info "scripts/get_occupied_workspace")
(deflisten current_info "scripts/get_current_workspace")

(defwidget workspace_button [window_number]
  (button 
    :label {replace("number+", "number", window_number)}
    :onclick {replace ("bspc desktop \"number\" -f", "number", window_number)}
    :class 
      {(
        matches(
          occupied_info, replace("number+", "number", window_number)
        ) ? "workspace_occupied" : (current_info == window_number ? "workspace_current" : "workspace")
      )}
    {(matches(current_info, replace("number+", "number", window_number)) ? "󰐾" : "󰐽")}
  )
)


(defwidget workspaces []
  (box 
    :class "workspaces"
    :orientation "h"
    :space-evenly true
    :halign "start"
    :spacing 10
    (workspace_button :window_number "0")
    (workspace_button :window_number "1")
    (workspace_button :window_number "2")
    (workspace_button :window_number "3")
    (workspace_button :window_number "4")
    (workspace_button :window_number "5")
    (workspace_button :window_number "6")
    (workspace_button :window_number "7")
    (workspace_button :window_number "8")
    (workspace_button :window_number "9")
  )
)



(defwidget metric [label value onchange]
  (box :orientation "h"
      :class "metric"
      :space-evenly false
    (box :class "label" label)
    (scale :min 0
      :max 101
      :active {onchange != ""}
      :value value
      :onchange onchange
    )
  )
)

(defwidget metric-v [label value onchange]
  (box :orientation "h"
    :class "metric-v"
    :space-evenly false
    :vexpand false
    :hexpand false
    (box :class "label" label)
    (scale 
      :min 0
      :max 101
      :active {onchange != ""}
      :value value
      :orientation "v"
      :flipped true
      :onchange onchange
      :vexpand false
      :hexpand false
    )
  )
)


(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry 
    :x "0%"
    :y "1%"
    :width "95%"
    :height "30px"
    :anchor "top center"
  )                    
  :reserve (struts 
    :side "top" 
    :distance "6%"
  )
  (bar)
)


(defwindow system
	:geometry (geometry 
    :x "-20px" 
    :y "7%" 
    :anchor "top right"
    :width "290px" 
    :height "200px"
  )
  (system)
)

(defpoll battery :interval "15s" "scripts/battery --bat")
(defpoll battery_status :interval "1m" "scripts/battery --bat-st")


(defpoll memory_used_mb :interval "10s" "scripts/mem-ad --used")
(defpoll memory_total_mb :interval "10s" "scripts/mem-ad --total")
(defpoll memory_free_mb :interval "10s" "scripts/mem-ad --free")

(defwidget system []
  (eventbox 
    :onhoverlost "eww close system"
    (box
      :class "sys_win" 
      :orientation "v" 
      :space-evenly "false" 
      :hexpand "false" 
      :vexpand "false" 
      :spacing 0
      (box 
        :class "sys_bat_box" 
        :orientation "h" 
        :space-evenly "false"
        (circular-progress 
          :value battery
          :class "sys_bat"
          :thickness 9
          (label 
            :text "󰂄"
            :class "sys_icon_bat"
            :limit-width 2
            :show_truncated false
            :wrap false)
        )
        (box 
          :orientation "v" 
          :space-evenly "false" 
          :spacing 0 
          :hexpand "false" 
          :vexpand "false"
          (label 
            :text "battery"
            :halign "start"
            :class "sys_text_bat"
            :limit-width 9
            :show_truncated false
            :wrap false
          )
          (label 
            :text "${battery}%"
            :halign "start"
            :class "sys_text_bat_sub"
            :limit-width 22
            :show_truncated false
            :wrap false
          )
          (label 
            :text "${battery_status}"
            :halign "start"
            :class "sys_text_bat_sub"
            :limit-width 22
            :show_truncated false
            :wrap false
          )
        )
      )
      (label :text "" :class "sys_sep" :halign "center")
      (box 
        :class "sys_bat_box" 
        :orientation "h" 
        :space-evenly "false"
        (circular-progress 
          :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
          :class "sys_disk"
          :thickness 9
          (label 
            :text ""
            :class "sys_icon_disk"
            :limit-width 2
            :show_truncated false
            :wrap false
          )
        )
        (box 
          :orientation "v" 
          :space-evenly "false" 
          :spacing 0 
          :hexpand "false" 
          :vexpand "false"
          (label 
            :text "disk usage"
            :halign "start"
            :class "sys_text_disk"
            :limit-width 16
            :show_truncated false
            :wrap false
          )
          (label 
            :text "${round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}%"
            :halign "start"
            :class "sys_text_bat_sub"
            :limit-width 22
            :show_truncated false
            :wrap false
          )
        )
      )
      (label :text "" :class "sys_sep" :halign "center")
      (box 
        :class "sys_text_disk" 
        :orientation "h" 
        :space-evenly "false" 
        :halign "start"
        (circular-progress 
          :value memory
          :class "sys_mem"
          :thickness 9
          (label 
            :text "󰍛"
            :class "sys_icon_mem"
            :limit-width 2
            :show_truncated false
            :wrap false
            :angle 0.0
          )
        )
        (box 
          :orientation "v" 
          :space-evenly "false" 
          :spacing 0 
          :hexpand "false" 
          :vexpand "false"
          (label 
            :text "memory"
            :halign "start"
            :class "sys_text_mem"
            :limit-width 9
            :show_truncated false
            :wrap false
          )
          (label 
            :text "${memory_used_mb} | ${memory_total_mb}mb "
            :halign "start"
            :class "sys_text_mem_sub"
            :limit-width 22
            :show_truncated false
            :wrap false)
          (label :text "${memory_free_mb}mb free"
              :halign "start"
              :class "sys_text_mem_sub"
              :limit-width 22
              :show_truncated false
              :wrap false
          ) 
        )
      )
      (label :text "" :class "sys_sep" :halign "center")
    )
  )
)